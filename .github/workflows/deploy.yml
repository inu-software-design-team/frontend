name: Deployment

on:
  push:
    branches:
      - main

permissions:
  actions: read
  contents: write
  pull-requests: write

jobs:
  deploy-storybook:
    name: Deploy Storybook
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup environment
        uses: ./.github/actions/setup-env
        with:
          cache: true

      - name: Run build
        run: npm run build

      - name: Run chromatic
        id: chromatic
        uses: chromaui/action@latest
        with:
          projectToken: ${{ secrets.CHROMATIC_PROJECT_TOKEN }}
          zip: true
          onlyChanged: true
          autoAcceptChanges: 'main'
          skip: 'dependabot/**'
          storybookBuildDir: storybook-static

      - name: Comment on pull request
        uses: actions/github-script@v7
        with:
          script: |
            const issueNumber = (await github.rest.repos.listPullRequestsAssociatedWithCommit({
              commit_sha: context.sha,
              owner: context.repo.owner,
              repo: context.repo.repo,
            })).data[0].number;

            github.rest.issues.createComment({
              issue_number: issueNumber,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: ':rocket: storybook: ${{ steps.chromatic.outputs.storybookUrl }}'
            });

  deploy-draft:
    name: Deploy Draft
    runs-on: ubuntu-latest
    container: pandoc/latex
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install mustache (to update the date)
        run: apk add ruby && gem install mustache

      - name: creates output
        run: sh ./build.sh

      - name: Pushes to another repository
        id: push_directory
        uses: cpina/github-action-push-to-another-repository@main
        env:
          API_TOKEN_GITHUB: ${{ secrets.GH_TOKEN }}
        with:
          source-directory: 'output'
          destination-github-username: herokwon
          destination-repository-name: inu-software-design-team-draft
          user-email: ${{ secrets.EMAIL }}
          commit-message: ${{ github.event.commits[0].message }}
          target-branch: main

      - name: Test get variable exported by push-to-another-repository
        run: echo $DESTINATION_CLONED_DIRECTORY
