name: CI/CD Docker

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # 1. 레포지토리 코드 체크아웃 (v4)
      - name: Check out code
        uses: actions/checkout@v4 # Node 16 런타임, 로컬 브랜치 자동 생성 :contentReference[oaicite:0]{index=0}

      # 2. Docker Hub에 로그인 (v3)
      - name: Log in to Docker Hub
        uses: docker/login-action@v3 # 개선된 토큰 관리 :contentReference[oaicite:1]{index=1}
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # 3. Docker Buildx 설정 (v3)
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3 # BuildKit builder 자동 생성 :contentReference[oaicite:2]{index=2}

      # 4. Docker 이미지 빌드 및 푸시 (v6)
      - name: Build and push Docker image
        uses: docker/build-push-action@v6 # SBOM/Provenance 지원 등 최신 기능 :contentReference[oaicite:3]{index=3}
        with:
          context: .
          push: true
          tags: rlarltn/cosy_frontend:latest

      # 5. deploy-repo로 dispatch 이벤트 전송
      - name: Trigger deploy-repo dispatch
        run: |
          curl -X POST https://api.github.com/repos/inu-software-design-team/deploy/dispatches \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.TOKEN_DEPLOY }}" \
            -H "Content-Type: application/json" \
            -d '{"event_type":"deploy_trigger"}'
