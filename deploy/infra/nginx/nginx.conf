server {
    listen 80;
    server_name _;

    location / {
        proxy_pass http://frontend:3000;  # Docker Compose에서 정의한 frontend 컨테이너
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
    }

    location /api {
        proxy_pass http://backend:4000;  # backend 컨테이너
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}



## 추후 SSL 인증서
# server {
#     listen 80;
#     server_name yourdomain.com www.yourdomain.com;

#     # Let's Encrypt 인증을 위한 경로 허용
#     location /.well-known/acme-challenge/ {
#         root /var/www/certbot;
#     }

#     # 나머지 HTTP 요청은 HTTPS로 리다이렉트
#     location / {
#         return 301 https://$host$request_uri;
#     }
# }

# server {
#     listen 443 ssl;
#     server_name yourdomain.com www.yourdomain.com;

#     ssl_certificate /etc/letsencrypt/live/yourdomain.com/fullchain.pem;
#     ssl_certificate_key /etc/letsencrypt/live/yourdomain.com/privkey.pem;
#     include /etc/letsencrypt/options-ssl-nginx.conf;
#     ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

#     location / {
#         proxy_pass http://frontend:3000;
#         proxy_http_version 1.1;
#         proxy_set_header Upgrade $http_upgrade;
#         proxy_set_header Connection 'upgrade';
#         proxy_set_header Host $host;
#         proxy_cache_bypass $http_upgrade;
#     }

#     location /api {
#         proxy_pass http://backend:4000;
#         proxy_set_header Host $host;
#         proxy_set_header X-Real-IP $remote_addr;
#         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#         proxy_set_header X-Forwarded-Proto $scheme;
#     }
# }